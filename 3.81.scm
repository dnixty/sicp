(define (random-numbers commands)
  (define (helper num remaining-commands)
    (let ((next-command (stream-car remaining-commands)))
      (cond ((eq? next-command 'generate)
             (cons-stream num
                          (helper (rand-update num)
                                       (stream-cdr remaining-commands))))
            ((pair? next-command)
             (if (eq? (car next-command) 'reset)
                 (cons-stream (cdr (stream-car remaining-commands))
                              (helper (rand-update (cdr (stream-car remaining-commands)))
                                           (stream-cdr remaining-commands)))
                 (error "bad command -- " next-command)))
            (else (error "bad command -- " next-command)))))
  (helper rand-init commands))
